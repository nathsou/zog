
import "../std/foundation.zog" { print }
import "../std/array.zog" { push, iter }

let isPrime = (sieve, n) => {
    for p in sieve->iter {
        if p * p > n {
            return true
        }
            
        if n % p == 0 {
            return false
        }
    }
    
    return true
}

let primes = iterator max => {
    yield 2
    
    mut sieve = [2]
    mut n = 3
    
    while n <= max {
        if isPrime(sieve, n) {
            sieve->push(n)
            yield n
        }
        
        n += 2
    }
}

let count = it => {
    mut len = 0
    
    for _ in it {
        len += 1
    }
    
    len
}

print(primes(1000000)->count)
